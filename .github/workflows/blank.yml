# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission to gradlew
        run: chmod +x gradlew

      - name: Create and Start AVD
        run: |
          sdkmanager "system-images;android-29;default;x86"
          echo no | avdmanager create avd -n test_avd --abi default/x86 -k "system-images;android-29;default;x86"
          emulator -avd test_avd -memory 2048 -cache-size 1000 -no-accel -no-window -no-audio -no-boot-anim &
          adb wait-for-device
          adb shell input keyevent 82 # Unlock the emulator screen

      - name: Build project (optional, if needed before tests)
        run: ./gradlew assembleDebug

      #- name: Run Android Emulator and Tests
     #   uses: reactivecircus/android-emulator-runner@v2 # Use this action for emulator setup and test execution
     #   with:
    #      api-level: 30 # Specify the Android API level for the emulator
     #     target: default
      #    arch: x86_64
       ##  script: ./gradlew connectedCheck # Command to run connected tests on the emulator

